.MODEL SMALL
.STACK 100H
.DATA
	keep_cs dw 0  	;хранит сегмент заменяемого прерывания
	keep_ip dw 0  	;хранит смещение заменяемого прерывания
.CODE

rec proc far
	cli 			;Блокируем обработку прерываний
	mov dx, 03fah;
	in al, dx 		;Читаем регистр индентификации прерываний (IIR)
	mov bl,al 		;сохраняем в bl  чтобы потом посмотреть причину прерывания
	mov dx, 03f8h  	;выбираем регистр thr
	in al, dx    	;читаем из порта 
	mov bh,al   	;записываем введенный символ
	mov dl, al   	;заносим введенный символ в dl
	mov ah, 02h   	;функция для вывода содержимого регистра dl на экран
	int 21h 
					;END_REC:
	mov al, 20h   	;разрешаем все
	out 20h, al   	;аппаратные прерывания
	sti    			;разрешаем маскируемые прерывания
	iret    		;выход из процедуры 
rec endp

start:
	mov ax, 350ch 	;вычесляем адрес обработчика 0сh
	int 21h  ;
	mov keep_ip, bx ;запоминаем смещение
	mov keep_cs, es ;запоминаем сегмент
					;Временно заменяем текущий сегмент данных на сегмент кода
	push ds   		;зачем-то сохраняем в стек
	push cs
	pop ds   		;меняем местами содержимое ds и cs
	in al, 21h
	and al, 11111111b
	out 21h, al
					;смещение для процедуры в dx
	mov dx, offset REC  
	mov ax, seg REC ;сегмент процедуры
	mov ds, ax 
	mov ax, 250ch	;замещаем старую процедуру прерывания
	int 21h			;на нашу
	pop ds ;
	in al, 21h
	and al, 11101111b
	out 21h, al
					;Инициализация UART
					;Установка 7 бита в регистре управления
	mov dx, 03fbh  	;BASE+3
	mov al, 10000000b
	out dx, al
					;Настройка делителя частоты на скорость передачи 9600 бит/с (000ch)
	mov al, 0Ch
	mov dx, 03f8h
	out dx, al
	inc dx
	mov al, 0
	out dx, al
					;Сброс 7 бита в регистре управления + установка требуемых флагов
					;8bit, 1stop bit, high parity 
	mov al, 00101011b
	mov dx, 03fbh;BASE+3
	out dx, al
					;Установка прерываний
	mov dx, 03f9h	;BASE+1
	mov al, 3		;		
	out dx, al
	
output_loop: 
	cmp bh,1bh 		;сравниваем полученный символ с 'esc', если да то выход 
	je EXIT  
	jmp output_loop  
	
exit:
					;востанавливаем предыдущую функцию прерывания
	cli    			;запрещаем маскируемые прерывания
	mov dx, keep_ip ;заносим в dx адрес смещения исходного обработчика
	mov ax, keep_cs ;заносим в аx адрес сегмента исходного обработчика
	mov ds, ax   	;перемещаем его в ds
	mov ah, 25h   	;функция установки вектора
	mov al, 0ch   	;номер вектора
	int 21h    		;восстанавливаем вектор
	sti    			;разрешаем маскируемые прерывания
	mov ah, 4ch   	;функция завершения программы
	int 21h    		
end start
