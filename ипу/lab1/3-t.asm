.MODEL SMALL
.STACK 100H
.DATA
	keep_cs dw 0  		;хранит сегмент заменяемого прерывания
	keep_ip dw 0  		;хранит смещение заменяемого прерывания
.CODE

REC proc far
	cli 				;Блокируем обработку прерываний
	mov dx, 03fah;
	in al, dx 			;Читаем регистр индентификации прерываний (IIR)
	mov bl,al   		;заносим в bl чтобы потом посмотреть причину прерывания
	mov al, 20h   		;разрешаем все аппаратные прерывания
	out 20h, al   		
	sti    				;разрешаем маскируемые прерывания
	iret    			;выход из процедуры 
REC endp

START:
	mov ax, 350ch 		;вычисляем адрес обработчика 0сh
	int 21h  
	mov keep_ip, bx  	;запоминаем смещение
	mov keep_cs, es  	;запоминаем сегмент
						;Временно заменяем текущий сегмент данных на сегмент кода
	push ds				;помещаем cs и ds в стек
	push cs   
	pop ds   			;меняем местами содержимое ds и cs
	in al, 21h   		;запрет маскируемых прерываний
	and al, 11111111b
	out 21h, al
	mov dx, offset REC  ;смещение для процедуры в dx
	mov ax, seg REC  	;сегмент процедуры
	mov ds, ax 
	mov ax, 250ch  		;заменяем обработчик на свой
	int 21h
	pop ds				;восстанавливаем ds
	in al, 21h
	and al, 11101111b  	;разрешаем аппаратные прерывания
	out 21h, al
						;Установка 7 бита в регистре управления
	mov dx, 03fbh  		;BASE+3
	mov al, 10000000b
	out dx, al
						;Настройка делителя частоты на скорость передачи 9600 бит/с (000ch)
	mov al, 0Ch
	mov dx, 03f8h
	out dx, al
	inc dx
	mov al, 0
	out dx, al
						;Сброс 7 бита в регистре управления + установка требуемых флагов
	mov al, 00101011b
	mov dx, 03fbh		;BASE+3
	out dx, al
						;Установка прерываний
	mov dx, 03f9h		;BASE+1
	mov al, 3
	out dx, al
	
INPUT_LOOP: 
	mov ah,01h     		;вывод символа
	int 21h 
	mov bh,al  			;сохраняем код символа  в bh
	mov dx,03f8h  		;выбираем регистр thr
	out dx,al   		;ввод символа в порт
	cmp bh,1bh  		;проверка на esc если совпал то выход
	je EXIT 
	jmp INPUT_LOOP   	;переходим на vivod
	
EXIT:
	cli    ;запрещаем маскируемые прерывания
	mov dx, keep_ip  ;заносим в dx адрес смещения исходного обработчика
	mov ax, keep_cs  ;заносим в аx адрес сегмента исходного обработчика
	mov ds, ax   ;перемещаем его в ds
	mov ah, 25h   ;функция установки вектора
	mov al, 0ch   ;номер вектора
	int 21h    ;восстанавливаем вектор
	sti    ;разрешаем маскируемые прерывания
	mov ah, 4ch   ;функция завершения программы
	int 21h    ;вызов функции
END START

